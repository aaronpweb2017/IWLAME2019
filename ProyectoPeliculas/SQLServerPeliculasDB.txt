CREATE DATABASE Peliculas

USE Peliculas

------------------------------------------------------------------------------------------------------

CREATE TABLE Usuario(
   id_usuario INT IDENTITY(1, 1) NOT NULL,
   nombre_usuario VARCHAR(70) NOT NULL,
   correo_usuario VARCHAR(50) NOT NULL,
   password_usuario VARCHAR(30) NOT NULL,
   tipo_usuario INT NOT NULL,
)

ALTER TABLE Usuario ADD CONSTRAINT id_usuario_PK_CSTR PRIMARY KEY(id_usuario)

ALTER TABLE Usuario ADD CONSTRAINT nombre_usuario_UN_CSTR UNIQUE(nombre_usuario)

INSERT INTO Usuario(nombre_usuario, correo_usuario, password_usuario, tipo_usuario) VALUES
('admin', 'luis-aaron40@hotmail.com', 'Wc+gCD/DHyc=', 1)

SELECT id_usuario, nombre_usuario, correo_usuario, 
password_usuario, tipo_usuario FROM Usuario

DROP TABLE Usuario

------------------------------------------------------------------------------------------------------


------------------------------------------------------------------------------------------------------

CREATE TABLE Token(
    id_token INT IDENTITY(1, 1) NOT NULL,
    valor_token VARCHAR(180) NOT NULL,
    emision_token DATETIME NOT NULL,
    expiracion_token DATETIME NULL,
    id_usuario INT NOT NULL
)

ALTER TABLE Token ADD CONSTRAINT id_token_PK_CSTR PRIMARY KEY(id_token)

ALTER TABLE Token ADD CONSTRAINT valor_token_UN_CSTR UNIQUE(valor_token)

ALTER TABLE Token ADD CONSTRAINT id_usuario_tk_FK_CSTR
FOREIGN KEY(id_usuario) REFERENCES Usuario(id_usuario)

SELECT id_token, valor_token, emision_token,
expiracion_token, id_usuario FROM Token

DROP TABLE Token

------------------------------------------------------------------------------------------------------


------------------------------------------------------------------------------------------------------

CREATE TABLE Solicitud(
   id_solicitud INT IDENTITY(1, 1) NOT NULL,
   nombre_solicitud VARCHAR(30) NOT NULL
)

ALTER TABLE Solicitud ADD CONSTRAINT
id_solicitud_PK_CSTR PRIMARY KEY(id_solicitud)

INSERT INTO Solicitud(nombre_solicitud) VALUES
('forgotten password'),
('token request')

SELECT id_solicitud, nombre_solicitud FROM Solicitud

DROP TABLE Solicitud

------------------------------------------------------------------------------------------------------


------------------------------------------------------------------------------------------------------

CREATE TABLE UsuarioSolicitud(
   id_usuario_solicitud INT IDENTITY(1, 1) NOT NULL,
   id_usuario INT NOT NULL,
   id_solicitud INT NOT NULL,
   status_solicitud INT NOT NULL,
   emision_solicitud DATETIME2 NOT NULL,
   aprobacion_solicitud DATETIME2 NULL
)

ALTER TABLE UsuarioSolicitud ADD CONSTRAINT
id_usuario_solicitud_PK_CSTR
PRIMARY KEY(id_usuario_solicitud)

ALTER TABLE UsuarioSolicitud ADD CONSTRAINT id_usuario_us_FK_CSTR
FOREIGN KEY(id_usuario) REFERENCES Usuario(id_usuario)

ALTER TABLE UsuarioSolicitud ADD CONSTRAINT id_solicitud_FK_CSTR
FOREIGN KEY(id_solicitud) REFERENCES Solicitud(id_solicitud)

SELECT id_usuario_solicitud, id_usuario, id_solicitud, status_solicitud,
emision_solicitud, aprobacion_solicitud FROM UsuarioSolicitud

DROP TABLE UsuarioSolicitud

------------------------------------------------------------------------------------------------------


------------------------------------------------------------------------------------------------------

CREATE TABLE Formato(
    id_formato INT IDENTITY(1, 1) NOT NULL,
    nombre_formato VARCHAR(10) NOT NULL,
)

ALTER TABLE Formato ADD CONSTRAINT
id_formato_PK_CSTR PRIMARY KEY(id_formato)

INSERT INTO Formato(nombre_formato) VALUES
('MKV'), ('MP4'), ('AVI')

SELECT id_formato, nombre_formato FROM Formato

DROP TABLE Formato

------------------------------------------------------------------------------------------------------


------------------------------------------------------------------------------------------------------

CREATE TABLE TipoResolucion(
    id_tipo_resolucion INT IDENTITY(1, 1) NOT NULL,
    nombre_tipo_resolucion VARCHAR(20) NOT NULL,
    porcentaje_visualizacion DECIMAL(6, 3) NOT NULL,
    porcentaje_perdida DECIMAL(6, 3) NOT NULL
)

ALTER TABLE TipoResolucion ADD CONSTRAINT
id_tipo_resolucion_PK_CSTR PRIMARY KEY(id_tipo_resolucion)

INSERT INTO TipoResolucion(nombre_tipo_resolucion, 
porcentaje_visualizacion, porcentaje_perdida) VALUES
('Cl√°sica', 75.000, 25.000),
('Standard', 74.075, 25.925),
('Open Matte', 87.500, 12.500),
('IMAX', 100.000, 0.000)

SELECT id_tipo_resolucion, nombre_tipo_resolucion, 
porcentaje_visualizacion, porcentaje_perdida
FROM TipoResolucion

DROP TABLE TipoResolucion

------------------------------------------------------------------------------------------------------


------------------------------------------------------------------------------------------------------

CREATE TABLE ValorResolucion(
    id_valor_resolucion INT IDENTITY(1, 1) NOT NULL,
    valor_resolucion VARCHAR(10) NOT NULL,
)

ALTER TABLE ValorResolucion ADD CONSTRAINT
id_valor_resolucion_PK_CSTR PRIMARY KEY(id_valor_resolucion)

--ALTER TABLE ValorResolucion ADD CONSTRAINT
--valor_resolucion_CK_CSTR CHECK(valor_resolucion LIKE '[624-1920]x[336-1080]')

ALTER TABLE ValorResolucion ADD CONSTRAINT valor_resolucion_UN_CSTR UNIQUE(valor_resolucion)

INSERT INTO ValorResolucion(valor_resolucion) VALUES
('624x352'), ('640x472'), ('688x336'), ('1024x576'), ('1056x592'),
('1152x648'), ('1280x526'), ('1280x534'), ('1280x542'), ('1280x690'),
('1280x716'), ('1280x720'), ('1488x1080'), ('1904x784'), ('1920x800'),
('1920x802'), ('1920x804'), ('1920x808'), ('1920x816'), ('1920x1012'),
('1920x1024'), ('1920x1032'), ('1920x1036'), ('1920x1040'), ('1920x1072'),
('1920x1080')

SELECT id_valor_resolucion, valor_resolucion FROM ValorResolucion

DROP TABLE ValorResolucion

------------------------------------------------------------------------------------------------------


------------------------------------------------------------------------------------------------------

CREATE TABLE RelacionAspecto(
    id_relacion_aspecto INT IDENTITY(1, 1) NOT NULL,
    valor_relacion_aspecto VARCHAR(10) NOT NULL,
)

ALTER TABLE RelacionAspecto ADD CONSTRAINT
id_relacion_aspecto_PK_CSTR PRIMARY KEY(id_relacion_aspecto)

INSERT INTO RelacionAspecto(valor_relacion_aspecto) VALUES
('4:3'), ('5:12'), ('16:9')

SELECT id_relacion_aspecto, valor_relacion_aspecto FROM RelacionAspecto

DROP TABLE RelacionAspecto

------------------------------------------------------------------------------------------------------


------------------------------------------------------------------------------------------------------

CREATE TABLE Resolucion(
    id_tipo_resolucion INT NOT NULL,
    id_valor_resolucion INT NOT NULL,
    id_relacion_aspecto INT NOT NULL
)

ALTER TABLE Resolucion ADD CONSTRAINT id_tipo_valor_relacion_PK_CSTR
PRIMARY KEY(id_tipo_resolucion, id_valor_resolucion, id_relacion_aspecto)

ALTER TABLE Resolucion ADD CONSTRAINT id_tipo_resolucion_FK_CSTR
FOREIGN KEY(id_tipo_resolucion) REFERENCES TipoResolucion(id_tipo_resolucion)

ALTER TABLE Resolucion ADD CONSTRAINT id_valor_resolucion_FK_CSTR
FOREIGN KEY(id_valor_resolucion) REFERENCES ValorResolucion(id_valor_resolucion)

ALTER TABLE Resolucion ADD CONSTRAINT id_relacion_aspecto_FK_CSTR
FOREIGN KEY(id_relacion_aspecto) REFERENCES RelacionAspecto(id_relacion_aspecto)

INSERT INTO Resolucion(id_tipo_resolucion,
id_valor_resolucion, id_relacion_aspecto) VALUES
(4, 1, 3), (1, 2, 1), (2, 3, 2), (3, 4, 3),
(3, 5, 3), (3, 6, 3), (2, 7, 2), (2, 8, 2),
(2, 9, 2), (4, 10, 3), (4, 11, 3), (3, 12, 3),
(4, 12, 3), (1, 13, 1), (2, 14, 2), (2, 15, 2),
(2, 16, 2), (2, 17, 2), (2, 18, 2), (2, 19, 2),
(4, 20, 3), (4, 21, 3), (4, 22, 3), (4, 23, 3),
(4, 24, 3), (4, 25, 3), (3, 26, 3), (4, 26, 3)

SELECT id_tipo_resolucion, id_valor_resolucion,
id_relacion_aspecto FROM Resolucion

SELECT TR.nombre_tipo_resolucion, VR.valor_resolucion,
RA.valor_relacion_aspecto FROM Resolucion R
INNER JOIN TipoResolucion TR ON R.id_tipo_resolucion = TR.id_tipo_resolucion
INNER JOIN ValorResolucion VR ON R.id_valor_resolucion = VR.id_valor_resolucion
INNER JOIN RelacionAspecto RA ON R.id_relacion_aspecto = RA.id_relacion_aspecto

DROP TABLE Resolucion

------------------------------------------------------------------------------------------------------


------------------------------------------------------------------------------------------------------

CREATE TABLE DetalleTecnico(
    id_detalle INT IDENTITY(1, 1) NOT NULL,
    id_formato INT NOT NULL,
    id_tipo_resolucion INT NOT NULL,
    id_valor_resolucion INT NOT NULL,
    id_relacion_aspecto INT NOT NULL
)

ALTER TABLE DetalleTecnico ADD CONSTRAINT
id_detalle_PK_CSTR PRIMARY KEY(id_detalle)

ALTER TABLE DetalleTecnico ADD CONSTRAINT id_formato_FK_CSTR
FOREIGN KEY(id_formato) REFERENCES Formato(id_formato)

ALTER TABLE DetalleTecnico ADD CONSTRAINT id_tipo_valor_relacion_FK_CSTR
FOREIGN KEY(id_tipo_resolucion, id_valor_resolucion, id_relacion_aspecto)
REFERENCES Resolucion(id_tipo_resolucion, id_valor_resolucion, id_relacion_aspecto)

INSERT INTO DetalleTecnico(id_formato, id_tipo_resolucion,
id_valor_resolucion, id_relacion_aspecto) VALUES
(1, 3, 26, 3)

SELECT id_detalle, id_formato,
id_tipo_resolucion, id_valor_resolucion,
id_relacion_aspecto FROM DetalleTecnico

SELECT FO.nombre_formato, TR.nombre_tipo_resolucion,
VR.valor_resolucion, RA.valor_relacion_aspecto FROM DetalleTecnico DT
INNER JOIN Formato FO ON DT.id_formato = FO.id_formato
INNER JOIN TipoResolucion TR ON DT.id_tipo_resolucion = TR.id_tipo_resolucion
INNER JOIN ValorResolucion VR ON DT.id_valor_resolucion = VR.id_valor_resolucion
INNER JOIN RelacionAspecto RA ON DT.id_relacion_aspecto = RA.id_relacion_aspecto

DROP TABLE DetalleTecnico

------------------------------------------------------------------------------------------------------


------------------------------------------------------------------------------------------------------

CREATE TABLE Pelicula(
    id_pelicula INT IDENTITY(1, 1) NOT NULL,
    nombre_pelicula VARCHAR(80) NOT NULL,
    fecha_estreno DATETIME2 NOT NULL,
    presupuesto MONEY NULL,
    recaudacion MONEY NULL,
    sinopsis VARCHAR(300) NOT NULL,
    calificacion DECIMAL(6, 3) NULL,
    directores VARCHAR(100) NOT NULL,
    generos VARCHAR(80) NOT NULL,
    urlImagen VARCHAR(300) NOT NULL,
    id_detalle INT NOT NULL
)

ALTER TABLE Pelicula ADD CONSTRAINT
id_pelicula_PK_CSTR PRIMARY KEY(id_pelicula)

ALTER TABLE Pelicula ADD CONSTRAINT id_detalle_FK_CSTR
FOREIGN KEY(id_detalle) REFERENCES DetalleTecnico(id_detalle)

SELECT id_pelicula, nombre_pelicula, fecha_estreno,
presupuesto, recaudacion, sinopsis, calificacion,
directores, generos, id_detalle, urlImagen FROM Pelicula

SELECT P.nombre_pelicula, F.nombre_formato, TR.nombre_tipo_resolucion,
VR.valor_resolucion, RA.valor_relacion_aspecto FROM Pelicula P
INNER JOIN DetalleTecnico DT ON P.id_detalle = DT.id_detalle
INNER JOIN Formato F ON DT.id_formato = F.id_formato
INNER JOIN TipoResolucion TR ON DT.id_tipo_resolucion = TR.id_tipo_resolucion
INNER JOIN ValorResolucion VR ON DT.id_valor_resolucion = VR.id_valor_resolucion
INNER JOIN RelacionAspecto RA ON DT.id_relacion_aspecto = RA.id_relacion_aspecto

DROP TABLE Pelicula

------------------------------------------------------------------------------------------------------


------------------------------------------------------------------------------------------------------

CREATE TABLE TipoArchivo(
    id_tipo_archivo INT IDENTITY(1, 1) NOT NULL,
    nombre_tipo_archivo VARCHAR(20) NOT NULL
)

ALTER TABLE TipoArchivo ADD CONSTRAINT
id_tipo_archivo_PK_CSTR PRIMARY KEY(id_tipo_archivo)

INSERT INTO TipoArchivo(nombre_tipo_archivo) VALUES
('Audio'), ('Video')

SELECT id_tipo_archivo,
nombre_tipo_archivo
FROM TipoArchivo

DROP TABLE TipoArchivo

------------------------------------------------------------------------------------------------------


------------------------------------------------------------------------------------------------------

CREATE TABLE Servidor(
    id_servidor INT IDENTITY(1, 1) NOT NULL,
    nombre_servidor VARCHAR(20) NOT NULL,
    sitio_servidor VARCHAR(50) NOT NULL
)

ALTER TABLE Servidor ADD CONSTRAINT
id_servidor_PK_CSTR PRIMARY KEY(id_servidor)

INSERT INTO Servidor(nombre_servidor, sitio_servidor) VALUES
('Zooqle','https://zooqle.com'),
('Mega','https://mega.nz'),
('Google Drive','https://www.google.com/drive'),
('Uptobox','https://www.uptoboxsearch.com'),
('btdb','http://btdb.to'),
('Mediafire','https://www.mediafire.com'),
('Odnoklassniki','https://ok.ru'),
('Openload','https://oload.fun'),
('RapidVideo','https://www.rapidvideo.com'),
('Uqload','https://uqload.com')

SELECT id_servidor, nombre_servidor,
sitio_servidor FROM Servidor

DROP TABLE Servidor

------------------------------------------------------------------------------------------------------


------------------------------------------------------------------------------------------------------

CREATE TABLE Descarga(
    id_descarga INT IDENTITY(1, 1) NOT NULL,
    password_descarga VARCHAR(30) NULL,
    id_tipo_archivo INT NOT NULL,
    id_servidor INT NOT NULL,
    id_pelicula INT NOT NULL
)

ALTER TABLE Descarga ADD CONSTRAINT
id_descarga_PK_CSTR PRIMARY KEY(id_descarga)

ALTER TABLE Descarga ADD CONSTRAINT id_tipo_archivo_FK_CSTR
FOREIGN KEY(id_tipo_archivo) REFERENCES TipoArchivo(id_tipo_archivo)

ALTER TABLE Descarga ADD CONSTRAINT id_servidor_FK_CSTR
FOREIGN KEY(id_servidor) REFERENCES Servidor(id_servidor)

ALTER TABLE Descarga ADD CONSTRAINT id_pelicula_FK_CSTR
FOREIGN KEY(id_pelicula) REFERENCES Pelicula(id_pelicula)

SELECT id_descarga, password_descarga,
id_tipo_archivo, id_servidor,
id_pelicula FROM Descarga

SELECT D.id_descarga, D.password_descarga,
TA.nombre_tipo_archivo, S.nombre_servidor,
P.nombre_pelicula FROM Descarga D 
INNER JOIN TipoArchivo TA ON D.id_tipo_archivo = TA.id_tipo_archivo
INNER JOIN Servidor S ON D.id_servidor = S.id_servidor
INNER JOIN Pelicula P ON D.id_pelicula = P.id_pelicula

DROP TABLE Descarga

------------------------------------------------------------------------------------------------------


------------------------------------------------------------------------------------------------------

CREATE TABLE Enlace(
    id_enlace INT IDENTITY(1, 1) NOT NULL,
    valor_enlace VARCHAR(150) NOT NULL,
    status_enlace INT NOT NULL,
    id_descarga INT NOT NULL,
)

ALTER TABLE Enlace ADD CONSTRAINT
id_enlace_PK_CSTR PRIMARY KEY(id_enlace)

ALTER TABLE Enlace ADD CONSTRAINT id_descarga_FK_CSTR
FOREIGN KEY(id_descarga) REFERENCES Descarga(id_descarga)

SELECT id_enlace, valor_enlace, 
id_descarga, status_enlace FROM Enlace EN

SELECT E.id_enlace, E.valor_enlace, E.status_enlace, 
D.id_descarga, D.password_descarga,
TA.nombre_tipo_archivo, S.nombre_servidor,
P.nombre_pelicula FROM Enlace E
INNER JOIN Descarga D ON E.id_descarga = D.id_descarga
INNER JOIN TipoArchivo TA ON D.id_tipo_archivo = TA.id_tipo_archivo
INNER JOIN Servidor S ON D.id_servidor = S.id_servidor
INNER JOIN Pelicula P ON D.id_pelicula = P.id_pelicula

DROP TABLE Enlace

------------------------------------------------------------------------------------------------------


------------------------------------------------------------------------------------------------------

CREATE VIEW VSolicitud AS
	SELECT US.id_usuario_solicitud, U.nombre_usuario, S.nombre_solicitud,
	US.status_solicitud, US.emision_solicitud, US.aprobacion_solicitud
	FROM UsuarioSolicitud US
	INNER JOIN Usuario U ON US.id_usuario = U.id_usuario
	INNER JOIN Solicitud S ON US.id_solicitud = S.id_solicitud

SELECT * FROM VSolicitud

DROP VIEW VSolicitud

------------------------------------------------------------------------------------------------------


------------------------------------------------------------------------------------------------------

CREATE VIEW VToken AS
	SELECT T.id_token, T.valor_token, T.emision_token,
	T.expiracion_token, U.nombre_usuario FROM Token T
	INNER JOIN Usuario U ON T.id_usuario = U.id_usuario

SELECT * FROM VToken

DROP VIEW VToken

------------------------------------------------------------------------------------------------------


------------------------------------------------------------------------------------------------------

CREATE VIEW VResolucion AS
    SELECT TR.id_tipo_resolucion, TR.nombre_tipo_resolucion,
	VR.id_valor_resolucion, VR.valor_resolucion,
    RA.id_relacion_aspecto, RA.valor_relacion_aspecto FROM Resolucion RE
    INNER JOIN TipoResolucion TR ON RE.id_tipo_resolucion = TR.id_tipo_resolucion
    INNER JOIN ValorResolucion VR ON RE.id_valor_resolucion = VR.id_valor_resolucion
    INNER JOIN RelacionAspecto RA ON RE.id_relacion_aspecto = RA.id_relacion_aspecto

SELECT * FROM VResolucion

DROP VIEW VResolucion


------------------------------------------------------------------------------------------------------

------------------------------------------------------------------------------------------------------

CREATE VIEW VDetalleTecnico AS
    SELECT DT.id_detalle,
	F.id_formato, F.nombre_formato,
    TR.id_tipo_resolucion, TR.nombre_tipo_resolucion,
	VR.id_valor_resolucion, VR.valor_resolucion,
    RA.id_relacion_aspecto, RA.valor_relacion_aspecto
    FROM DetalleTecnico DT
    INNER JOIN Formato F ON DT.id_formato = F.id_formato
    INNER JOIN TipoResolucion TR ON DT.id_tipo_resolucion = TR.id_tipo_resolucion
    INNER JOIN ValorResolucion VR ON DT.id_valor_resolucion = VR.id_valor_resolucion
    INNER JOIN RelacionAspecto RA ON DT.id_relacion_aspecto = RA.id_relacion_aspecto
    
SELECT * FROM VDetalleTecnico

DROP VIEW VDetalleTecnico

------------------------------------------------------------------------------------------------------


------------------------------------------------------------------------------------------------------

CREATE VIEW VDescarga AS
    SELECT D.id_descarga, D.password_descarga,
    TA.id_tipo_archivo, TA.nombre_tipo_archivo,
    S.id_servidor, S.nombre_servidor,
    P.id_pelicula, P.nombre_pelicula
    FROM Descarga D
    INNER JOIN Pelicula P ON D.id_pelicula = P.id_pelicula
    INNER JOIN TipoArchivo TA ON D.id_tipo_archivo = TA.id_tipo_archivo
    INNER JOIN Servidor S ON D.id_servidor = S.id_servidor

SELECT * FROM VDescarga

DROP VIEW VDescarga

------------------------------------------------------------------------------------------------------